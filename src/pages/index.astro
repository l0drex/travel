---
import { getCollection, getEntry } from "astro:content";
import type { CollectionEntry } from "astro:content";
import Layout from "@layouts/BaseLayout.astro";
import EarthOverview from "@components/earth/EarthOverview.vue";
import BlogListEntry from "@components/TravelEntry.astro";
import {colors} from "@utils/theme";
import type {Journey, JourneyType} from "@utils/types";
import {getPoints} from "../utils/geoJson";


const posts: CollectionEntry<"posts">[] = (await getCollection("posts"))
    .sort((a, b) => b.data.date.valueOf() - a.data.date.valueOf());

async function getJourneys() {
    const journeys: Journey[] = [];

    for (let p of posts) {
        const entry = await getEntry("gpx", p.data.gpx) as CollectionEntry<"gpx">;
        const geoJson = entry.data.data;
        const points = getPoints(geoJson);
        const coordinates = points[points.length - 1];
        // longitude, latitude
        const loc: [number, number] = [coordinates[1], coordinates[0]];

        journeys.push({
            title: p.data.title,
            id: p.id,
            url: `${import.meta.env.BASE_URL}/${p.slug}`,
            type: p.data.type as JourneyType,
            date: p.data.date,
            location: loc,
            image: p.data.image
        });
    }

    return journeys;
}

const journeys = await getJourneys();

const backgroundDarkString = colors.dark.bg;
const earthDarkString = colors.dark.earth;
const earthLightString = colors.light.earth;
const backgroundLightString = colors.light.bg;
---

<Layout title="/travel">
    <EarthOverview client:only="vue" journeys={journeys} slot="background">
        <svg viewBox="0 5 100 90" xmlns="http://www.w3.org/2000/svg" class="w-screen h-screen">
            <defs>
                <linearGradient id="earthGradient">
                    <stop offset="0%" stop-color={earthLightString}></stop>
                    <stop offset="100%" stop-color={backgroundLightString}
                    ></stop>
                </linearGradient>

                <linearGradient id="earthGradientDark">
                    <stop offset="0%" stop-color={earthDarkString}></stop>
                    <stop offset="100%" stop-color={backgroundDarkString}
                    ></stop>
                </linearGradient>
            </defs>

            <circle cx="50" cy="50" r="50" class="fill-[url(#earthGradient)] dark:fill-[url(#earthGradientDark)]"></circle>
        </svg>
    </EarthOverview>
    
    <h1 class="text-5xl font-extrabold mb-20 mt-20 text-center mx-5 sm:text-6xl text-red-600">
        Discover my Adventures!
    </h1>
    
    <ul id="blogs" class="flex flex-col gap-3">
        {posts.map(p => <BlogListEntry journey={p} />)}
    </ul>
</Layout>
