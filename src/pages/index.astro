---
import { getCollection, getEntry } from "astro:content";
import type { CollectionEntry } from "astro:content";
import Layout from "@layouts/Layout.astro";
import EarthOverview from "@components/travel/EarthOverview.vue";
import BlogListEntry from "@components/travel/TravelEntry.astro";
import {
    getPoints,
    type Journey,
    arrayToColor,
    earthDarkColor,
    earthLightColor,
    travelDark,
    travelLight, type JourneyType,
} from "@utils/travel";

const posts: CollectionEntry<"travel">[] = await getCollection("travel");

async function getJourneys() {
    const journeys: Journey[] = [];

    for (let p of posts) {
        const entry = await getEntry("gpx", p.data.gpx) as CollectionEntry<"gpx">;
        const geoJson = entry.data.data;
        const points = getPoints(geoJson);
        const coordinates = points[points.length - 1];
        // longitude, latitude
        const loc: [number, number] = [coordinates[1], coordinates[0]];

        journeys.push({
            title: p.data.title,
            url: `/travel/${p.slug}`,
            type: p.data.type as JourneyType,
            date: p.data.date,
            location: loc,
        });
    }

    return journeys;
}

const journeys = await getJourneys();

const backgroundDarkString = arrayToColor(travelDark);
const earthDarkString = arrayToColor(earthDarkColor);
const earthLightString = arrayToColor(earthLightColor);
const backgroundLightString = arrayToColor(travelLight);
---

<Layout
    background={backgroundLightString}
    backgroundDark={backgroundDarkString}
    title="/travel"
>
    <EarthOverview client:only="vue" journeys={journeys} slot="background">
        <svg
                id="earth"
                viewBox="0 0 100 100"
                xmlns="http://www.w3.org/2000/svg"
        >
            <defs>
                <linearGradient id="earthGradient">
                    <stop offset="0%" stop-color={earthLightString}></stop>
                    <stop offset="100%" stop-color={backgroundLightString}
                    ></stop>
                </linearGradient>

                <linearGradient id="earthGradientDark">
                    <stop offset="0%" stop-color={earthDarkString}></stop>
                    <stop offset="100%" stop-color={backgroundDarkString}
                    ></stop>
                </linearGradient>
            </defs>

            <circle cx="50" cy="50" r="50" fill="url(#earthGradient)"></circle>
        </svg>
    </EarthOverview>
    
    <h1>Discover my Adventures!</h1>
    
    <div id="blog-container">
        <ul id="blogs">
            {journeys.map((j) => <BlogListEntry journey={j} />)}
        </ul>
    </div>
</Layout>

<style define:vars={{ earthDarkString, earthLightString }}>
    h1 {
        color: red;
    }

    #earth {
        margin: 0 auto;
        display: block;
        max-width: 100%;
        height: 100%;
    }

    @media (prefers-color-scheme: dark) {
        circle {
            fill: url(#earthGradientDark);
        }
    }

    #blogs {
        display: flex;
        flex-direction: column;

        padding: 0.5rem;
        margin: 0 auto;
        gap: 0.5rem;
        box-sizing: border-box;

        width: max-content;
    }
</style>
