---
import { getCollection, getEntry, type CollectionEntry } from "astro:content";
import Layout from "@layouts/BaseLayout.astro";
import TrackView from "@components/track/TrackView.vue";
import authors from "src/authors.json";
import {journeyTypes} from "../utils/types";
import JourneyType from "../components/TypeIcon.astro";
import {dateFormatter, getPreviewAlt} from "../utils/general";
import {getImage} from "astro:assets";
import JourneyContent from "../components/JourneyContent.astro";

export async function getStaticPaths() {
    const posts: CollectionEntry<'posts'>[] = await getCollection("posts");

    return posts.map((entry) => ({
        params: { slug: entry.slug },
        props: { entry },
    }));
}

interface Props {
    entry: CollectionEntry<"posts">;
}

const { entry } = Astro.props;
const { Content } = await entry.render();

const geoJson = await getEntry(entry.data.gpx);
const author = authors[entry.data.author];
const journeyType = journeyTypes[entry.data.type];

const jsDate: Date = entry.data.date;
const machineDate = jsDate.toISOString();
const humanDate = dateFormatter(jsDate);

const ogImage = await getImage({
    src: entry.data.image,
    width: 1200,
    height: 630,
    format: "webp",
});

const ogAlt = getPreviewAlt(entry);
---

<Layout title={entry.data.title}>
    <Fragment slot="meta">
        <meta property="og:type" content="article" />
        <meta property="article:section" content="travel"/>
        <meta property="article:section" content={entry.data.type} />
        <meta property="article:tag" content="travel" />
        <meta property="article:tag" content={entry.data.type} />
        
        <meta name="date" content={machineDate} />
        <meta property="article:published_time" content={machineDate} />
        
        <meta name="author" content={author.name}/>
        <meta name="fediverse:creator" content={author.fediverse}/>
        <meta property="article:author" content={author.name}/>
        
        <meta name="description" content={entry.data.description} />
        <meta property="og:description" content={entry.data.description} />
        
        <meta property="og:image" content={ogImage.src}/>
        <meta property="og:image:width" content={`${ogImage.options.width}`}/>
        <meta property="og:image:height" content={`${ogImage.options.height}`}/>
        <meta property="og:image:format" content={ogImage.options.format}/>
        <meta property="og:image:alt" content={ogAlt}/>
    </Fragment>

    <section>
        <h1 class="font-bold text-4xl sm:text-5xl mb-4 text-center">{entry.data.title}</h1>
        <div class="text-center text-2xl sm:text-3xl mb-8 flex align-baseline gap-2 justify-center">
            {(<JourneyType type={journeyType} />)}
            <span>·</span>
            <time datetime={jsDate.toISOString()}>{humanDate}</time>
        </div>
    </section>
    
    <div class="w-full px-5 sm:px-10">
        <TrackView client:only="vue" geoJson={geoJson.data}/>
    </div>
    
    <JourneyContent>
        <Content />
    </JourneyContent>
    
    <a href={import.meta.env.BASE_URL} class="block px-2 py-1 
        border-2 rounded-lg mt-5 mb-10
        border-fg hover:bg-fg hover:text-bg
        dark:border-fg-dark hover:dark:bg-fg-dark hover:dark:text-bg-dark
        ">
        Zurück zur Übersicht
    </a>
</Layout>
