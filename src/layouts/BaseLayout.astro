---
import "@styles/global.css";
import twconfig from "tailwind.config.mjs";
import { Icon } from "astro-icon/components";

interface Props {
  title: string;
  light?: string;
  dark?: string;
}

const { title } = Astro.props;

const themeColor = {
  light: Astro.props.light ?? twconfig.theme.extend.colors.bg.DEFAULT,
  dark: Astro.props.dark ?? twconfig.theme.extend.colors.bg.dark,
};

const rssLink = new URL(`${import.meta.env.BASE_URL}/rss.xml`, Astro.site);

interface Link {
  href: URL;
  text: string;
  icon: string;
}

const links: Link[] = [
  {
    href: new URL(
      "https://docs.github.com/en/site-policy/privacy-policies/github-general-privacy-statement",
    ),
    text: "Datenschutz",
    icon: "material-symbols:lock-sharp",
  },
  {
    href: new URL("https://github.com/l0drex/travel"),
    text: "Source Code",
    icon: "material-symbols:frame-source"
  },
  {
    href: rssLink,
    text: "RSS",
    icon: "material-symbols:rss-feed",
  },
];
---

<!doctype html>
<html lang="de-de" prefix="og: https://ogp.me/ns#">
  <head>
    <meta charset="UTF-8" />
    <meta property="og:locale" content="de_DE" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="/travel/favicon.svg" />
    <meta name="generator" content={Astro.generator} />
    <meta
      name="theme-color"
      content={themeColor.light}
      media="(prefers-color-scheme: light)"
    />
    <meta
      name="theme-color"
      content={themeColor.dark}
      media="(prefers-color-scheme: dark)"
    />
    <title>{title}</title>
    <meta name="title" content={title} />
    <meta property="og:title" content={title} />
    <meta property="og:url" content={Astro.url} />
    <meta property="og:site_name" content="Lorenz Reiseberichte" />
    <slot name="meta">
      <meta name="description" content="Reiseblog von Lorenz Hoffmann" />
      <meta property="og:description" content="Reiseblog von Lorenz Hoffmann" />
      <meta property="og:type" content="website" />
    </slot>
    <link rel="alternate" type="application/rss+xml" href={rssLink} />
  </head>

  <body
    class="-z-50 flex h-screen bg-bg font-sans text-fg selection:bg-primary selection:text-bg dark:bg-bg-dark dark:text-fg-dark"
  >
    <div class="absolute top-0 left-0 -z-40 h-screen w-screen">
      <slot name="background" />
    </div>

    <aside class="max-w-xs bg-bg-2">
      <slot name="aside" />
    </aside>

    <div class="flex h-full grow flex-col">
      <main class="grow overflow-auto">
        <slot />
      </main>

      <footer
        class="m-2 flex justify-center gap-8 text-fg-inactive dark:text-fg-inactive-dark"
      >
        {
          links.map((l) => (
            <a href={l.href} class="flex items-center gap-1 hover:underline">
              <Icon name={l.icon} />
              {l.text}
            </a>
          ))
        }
      </footer>
    </div>
  </body>
</html>
