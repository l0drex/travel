---
import { Color } from "three";


interface Props {
  title: string;
  background?: string;
  backgroundDark?: string;
}

let {title, background, backgroundDark} = Astro.props;

if (background != null && backgroundDark == null) {
    backgroundDark = background;
}

background ??= "white";
backgroundDark ??= "black";

function getColor(backgroundColor: string) {
    const rgb = new Color(backgroundColor);
    const hsl = {
        h: 0,
        s: 0,
        l: 0
    };
    rgb.getHSL(hsl);

    return hsl.l < .49 ? "white" : "black";
}

const color = getColor(background);
const colorDark = getColor(backgroundDark)

---

<!doctype html>
<html lang="en" class="
text-orange-900 bg-orange-100 dark:text-orange-200 dark:bg-stone-950
selection:bg-red-600 selection:text-orange-50
 -z-50
">
<head>
    <meta charset="UTF-8"/>
    <meta name="description" content="Personal website of Lorenz Hoffmann"/>
    <meta name="viewport" content="width=device-width"/>
    <link rel="icon" type="image/svg+xml" href="/favicon.ico"/>
    <meta name="generator" content={Astro.generator}/>
    <meta name="theme-color" content={background} media="(prefers-color-scheme: light)"/>
    <meta name="theme-color" content={backgroundDark} media="(prefers-color-scheme: dark)"/>
    <title>{title}</title>
</head>


<body class="flex flex-col justify-between min-h-screen font-sans">

<div class="absolute top-0 left-0 w-full h-full -z-40">
    <slot name="background"/>
</div>

<main class="flex flex-col items-center mt-10">
    <slot/>
</main>

<footer class="flex justify-center m-2">
    <a href='https://docs.github.com/en/site-policy/privacy-policies/github-general-privacy-statement'>Privacy Notice</a>
</footer>

</body>
</html>

<style is:global define:vars={{background, backgroundDark, color, colorDark}}>
</style>
