---
import "@styles/global.css";
import { Icon } from "astro-icon/components";
import { Color } from "three";


interface Props {
  title: string;
  background?: string;
  backgroundDark?: string;
}

let {title, background, backgroundDark} = Astro.props;

if (background != null && backgroundDark == null) {
    backgroundDark = background;
}

background ??= "white";
backgroundDark ??= "black";

function getColor(backgroundColor: string) {
    const rgb = new Color(backgroundColor);
    const hsl = {
        h: 0,
        s: 0,
        l: 0
    };
    rgb.getHSL(hsl);

    return hsl.l < .49 ? "white" : "black";
}

const color = getColor(background);
const colorDark = getColor(backgroundDark)

---

<!doctype html>
<html lang="en">
<head>
    <meta charset="UTF-8"/>
    <meta name="description" content="Personal website of Lorenz Hoffmann"/>
    <meta name="viewport" content="width=device-width"/>
    <link rel="icon" type="image/svg+xml" href="/favicon.ico"/>
    <meta name="generator" content={Astro.generator}/>
    <meta name="theme-color" content={background} media="(prefers-color-scheme: light)"/>
    <meta name="theme-color" content={backgroundDark} media="(prefers-color-scheme: dark)"/>
    <title>{title}</title>
</head>

<body>
<div id="background">
    <slot name="background"/>
</div>

<main>
    <slot/>
</main>
<footer>
    <a href='https://docs.github.com/en/site-policy/privacy-policies/github-general-privacy-statement'>Privacy Notice</a>
</footer>
</body>
</html>

<style>
    body {
        margin: 0;
        display: flex;
        flex-direction: column;
        min-height: 100vh;
        justify-content: space-between;
        align-content: start;
    }

    header {
        position: fixed;
        width: 100%;
        background: var(--background);
    }

    @media (prefers-color-scheme: dark) {
        header {
            background: var(--backgroundDark);
        }
    }

    main {
        height: 100%;
        margin-top: 5rem;

        display: flex;
        flex-direction: column;
        align-items: center;
    }

    footer {
        display: flex;
        justify-content: space-evenly;
        padding: 1em;
    }
    
    #background {
        position: absolute;
        top: 0;
        left: 0;
        z-index: -100;

        width: 100%;
        height: 100%;
    }
</style>

<style is:global define:vars={{background, backgroundDark, color, colorDark}}>
</style>

{backgroundDark === "black" && <style is:global>
    @media (prefers-color-scheme: dark) {
        button, .button {
            border: solid white 1pt;
        }
    }
</style>}
